#!/usr/bin/env perl
use Mojolicious::Lite;
use strict;
use DBIx::Custom;

open (DBCONF,"< app.conf") || die "Error open dbconfig file";
my @appconf=<DBCONF>;
close DBCONF;
chomp @appconf;
our $dbi = DBIx::Custom->connect(
			dsn => $appconf[0],
			user => $appconf[1],
			password => $appconf[2],
			option => {mysql_enable_utf8=>1}
);

$dbi->do('SET NAMES utf8');

get '/cart' => sub {
    my $self=shift;
    my $cart=$self->session('cart');
	my @pid= keys $cart;
	my $pid=' id=';
	$pid=$pid.join(' or id=',@pid);	
	my $result=$dbi->select(
		table => 'product',
		column => ['id','title'],
		where => $pid
	);
    $self->stash(cart => $cart,product => $result->fetch_all);
    $self->render('cart');
};

post '/cart' => sub{
    my $self=shift;
    my $productid=$self->param('id');
    my $cart=$self->session('cart');
    $cart->{$productid}++;
    $self->session(cart => $cart);
	my @pid= keys $cart;
	my $pid=' id=';
    $pid=$pid.join(' or id=',@pid);
    my $result=$dbi->select(
        table => 'product',
        column => ['id','title'],
        where => $pid
    );
    $self->stash(product => $result->fetch_all,cart => $cart);
    $self->render('cart');
};

get '/:catalog' => sub {
  my $self = shift;
  my $caturl=$self->param('catalog');
  my $result=$dbi->select(
						table => 'router_a',
						column => ['product.title','product.url','product.set','product.instore',
									'product.image','product.id','product.price'],
						where => {'catalog.url' => $caturl},
						join => [
								 'right join catalog on router_a.catid=catalog.id',
								 'left join product on router_a.prodid=product.id'
								]
						);

  $self->stash(product => $result->fetch_hash_all);
  $self->render('catalog');
};

get '/:catalog/:product' => sub {
  my $self = shift;
  my $caturl=$self->param('catalog');
  my $produrl=$self->param('product');
  my $result=$dbi->select(
                        table => 'router_a',
                        column => ['product.id','product.title','product.price','product.desc',
									'product.set','product.features','product.image','product.instore'],
                        where => {
									'catalog.url' => $caturl,
									'product.url' => $produrl
								 },
                        join => [
                                 'right join catalog on router_a.catid=catalog.id',
                                 'left join product on router_a.prodid=product.id'
                                ]
                        );
  $self->stash(product => $result->fetch_hash);
  $self->render('product');
};

post '/cart/:id' => sub{
	my $self=shift;
	my $productid=$self->param('id');
	my $cart=$self->session('cart');
	$cart->{$productid}++;
	$self->session(cart => $cart);
	my $result=$dbi->select(
							column => 'title',
							where => 'id=1 or id=2',
							table => 'product'
							);
	$self->stash(product => $result->fetch_all,cart => $cart);
	$self->render('cart');
};

app->start;
